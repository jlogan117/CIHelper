pipeline {
    agent { 
		label 'DEVODW711'
	}
	
stages {
    
	stage('Deleting Existing RCloud') {
		steps {
		    timeout(5){
			script {
				try {
				    bat"C:\\CIHelper.exe -createstatus ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} 12"
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"Deleting UltiPro RCloud\" 1"
					slackSend channel: "#upv14", color: '#FFFF00', message: "STARTING: ${env.JOB_NAME} On DEVODW711 \n build number: ${env.BUILD_NUMBER}"
					bat"C:\\CIHelper.exe -removebuilds ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER}"
					bat"C:\\CIHelper.exe -rcloud delete Upfourt up denisewe"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
                    bat"C:\\CIHelper.exe -updatestatus ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} ${currentBuild.result}"
                    def urlnba = "file://DEVODW711/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#upv14", color: '#FF0000', message: "FAILED To delete UltiPro RCloud \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		    }
		}
	}
	
	stage('Create Ultipro RCloud') {
		steps {
		    timeout(140){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"Creating UltiPro RCloud\" 2"
					bat"C:\\CIHelper.exe -rcloud create Upfourt up denisewe"
				}					
				catch(error){
                   currentBuild.result = 'FAILURE'
                   bat"C:\\CIHelper.exe -updatestatus ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} ${currentBuild.result}"
				   def urlnba = "file://DEVODW711/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#upv14", color: '#FF0000', message: "FAILED To Create UltiPro RCloud \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
               }
			}
		    }
		}
	}
	
	stage('SVN Update') {
		steps {
		    timeout(20){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"Updating SVN\" 3"
					bat"C:\\SvnUpdateEcho.bat"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
                    bat"C:\\CIHelper.exe -updatestatus ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} ${currentBuild.result}"
					def urlnba = "file://DEVODW711/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#upv14", color: '#FF0000', message: "FAILED To update svn \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		    }
		}
	}
	
	stage('Configure Echo') {
		steps {
		    timeout(10){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"Configuring Echo\" 4"
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\ChangeEnvironment.bat HIT-CLOUDCLOUD"
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\ChangeEchoParametersXml.bat Chrome"
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\ChangeEchoEnvironmentXml.bat Upfourt 138 Upfourt"
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\BuildEcho.bat"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
                    bat"C:\\CIHelper.exe -updatestatus ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} ${currentBuild.result}"
					def urlnba = "file://DEVODW711/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#upv14", color: '#FF0000', message: "FAILED To Configure Echo \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
				finally{
					bat" if not exist \"C:\\${env.JOB_NAME}\" md \"C:\\${env.JOB_NAME}\" "
				    bat" md \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\" "
				}
			}
		    }
		}
	}
	
	stage('Environment Setup') {
		steps {
		    timeout(6){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"Setting Up Environment\" 5"
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == EnvSetup\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\EnvSetup.txt\" "
				}			
				catch(error){
                    currentBuild.result = 'FAILURE'
                    bat"C:\\CIHelper.exe -updatestatus ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} ${currentBuild.result}"
					def urlnba = "file://DEVODW711/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#upv14", color: '#FF0000', message: "FAILED To Setup Environment \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\EnvSetup.html\" /y "
				}
			}
		    }
		}
	}
        
	stage('Run V14Grid Tests') {
		steps {
		    timeout(70){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"v14 Grid Tests\" 6"
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw711 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == V14Grid\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14Grid.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14Grid.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} V14Grid"
				}
			}
		    }
		}
	}
        
	stage('Run V14CanadaNewHire Tests') {
		steps {
		    timeout(200){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"v14CanadaNewHire\" 7"
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw711 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == V14CanadaNewHire\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14CanadaNewHire.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14CanadaNewHire.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} V14CanadaNewHire"
				}
			}
		    }
		}
	}
		
	stage('Run V14CanadaRehire Tests') {
		steps {
		    timeout(330){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"v14CanadaRehire\" 8"
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw711 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == V14CanadaRehire\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14CanadaRehire.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14CanadaRehire.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} V14CanadaRehire"
				}
			}
		    }
		}
	}
		
	stage('Run V14UsaNewHire Tests') {
		steps {
		    timeout(200){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"V14UsaNewHire\" 9"
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw711 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == V14UsaNewHire\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14UsaNewHire.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14UsaNewHire.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} V14UsaNewHire"
				}
			}
		    }
		}
	}
		
	stage('Run V14UsaRehire Tests') {
		steps {
		    timeout(200){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"V14UsaRehire\" 10"
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw711 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == V14UsaRehire\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14UsaRehire.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14UsaRehire.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} V14UsaRehire"
				}
			}
		    }
		}
    }
	
	stage('Run V14SupplementalData Tests') {
		steps {
		    timeout(70){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"V14SupplementalData\" 11"
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw711 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == V14SupplementalData\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14SupplementalData.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\V14SupplementalData.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} V14SupplementalData"
				}
			}
		    }
		}
    }
    
    stage('Global Tests') {
		steps {
		    timeout(130){
			script {
				try {
				    bat"C:\\CIHelper.exe -updatestatusstage ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} \"Global\" 12"
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw711 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.UltiPro.dll\" --where \"cat == GlobalHire\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\GlobalHire.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\GlobalHire.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} GlobalHire"
				}
			}
		    }
		}
    }
	stage('Slack Notification') {
		steps {
		    timeout(1){
			script {
				try {
				    if ("${currentBuild.result}" == "null") {
			            currentBuild.result = "SUCCESS"
                     }
				    bat"C:\\CIHelper.exe -updatestatus ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} ${currentBuild.result}"
				   def params = "C:\\CIHelper.exe -getpassed DEVODW711 \"${env.JOB_NAME}\" ${env.BUILD_NUMBER}"
				   def work = bat(returnStdout: true, script: "C:\\CIHelper.exe -getpassed DEVODW711 \"${env.JOB_NAME}\" ${env.BUILD_NUMBER}").trim()
				   work = work.substring(109).trim()
				   notifyBuild("${currentBuild.result}", "${work}")
                }
                catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW711/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#upv14", color: '#FF0000', message: "FAILED To Report Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		    }
		}
    }
        
}
}
def notifyBuild(String buildStatus = 'SUCCESS', String work) {
	    if (buildStatus == "null" || buildStatus == "SUCCESS") {
            color = 'GREEN'
            colorCode = '#00FF00'
			buildStatus = "SUCCESS"
        } else {
            color = 'RED'
            colorCode = '#FF0000'
        }
        def urlnba = "file://DEVODW711/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
	    slackSend channel: "#upv14", color: colorCode, message: "${buildStatus}: ${env.JOB_NAME} \n ${work} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
	}