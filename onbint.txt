pipeline {
    agent { 
		label 'DEVODW802'
	}
	
stages {
    stage('Building Onboarding') {
		steps {
			script {
				try {
					slackSend channel: "#onbintegration", color: '#FFFF00', message: "STARTING: ${env.JOB_NAME} On DEVODW802 \n build number: ${env.BUILD_NUMBER}"
					bat"C:\\CIHelper.exe -removebuilds ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER}"
					bat"C:\\CIHelper.exe -rcloud Build ONBCIInt onb"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Build Onboarding RC Branch \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		}
	}
	
		stage('Deleting Existing OnbRCloud') {
		steps {
			script {
				try {
					bat"C:\\CIHelper.exe -rcloud delete ONBCIInt onb"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
					slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Delete Onboarding RCloud \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		}
	}
		stage('Deleting Existing UP RCloud') {
		steps {
			script {
				try {
					bat"C:\\CIHelper.exe -rcloud delete UpInt up Denisewe"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
					slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Delete UltiPro RCloud \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		}
	}
	
	stage('Create Ultipro RCloud') {
		steps {
			script {
				try {
					bat"C:\\CIHelper.exe -rcloud create UpInt up DeniseWe"
				}					
				catch(error){
                   currentBuild.result = 'FAILURE'
				   def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
					slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Create UltiPro RCloud \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
               }
			}
		}
	}
	
	stage('Create Onb RCloud') {
		steps {
			script {
				try {
					bat"C:\\CIHelper.exe -rcloud create ONBCIInt onb"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
					slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Create Onboarding RCloud \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		}
	}
	
	
	stage('SVN Update') {
		steps {
			script {
				try {
					bat"C:\\SvnUpdateEcho.bat"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
					slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Update SVN \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		}
	}
	
	stage('Configure Echo') {
		steps {
			script {
				try {
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\ChangeEnvironment.bat HIT-CLOUDCLOUD"
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\ChangeEchoParametersXml.bat Chrome"
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\ChangeEchoEnvironmentXml.bat UpInt 138 ONBCIInt"
					bat"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\Echo.nunit.TestSupport\\HITSetup\\BuildEcho.bat"
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Configure Echo \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
				finally{
					bat" if not exist \"C:\\${env.JOB_NAME}\" md \"C:\\${env.JOB_NAME}\" "
				    bat" md \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\" "
				}
			}
		}
	}
	
	stage('Create Onboarding Account SB122') {
		steps {
			script {
				try {
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.Onboarding.Integration.dll\" --where \"cat == EnvSetup\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\EnvSetup.txt\" "
				}			
				catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Build Create Onboarding Account \n Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\EnvSetup.html\" /y "
				}
			}
		}
	}
        
	stage('Run CodeSync Tests') {
		steps {
			script {
				try {
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw802 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.Onboarding.Integration.dll\" --where \"cat == CodeSync\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\CodeSync.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\CodeSync.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} CodeSync"
				}
			}
		}
	}
        
	stage('Run Supplemental Tests') {
		steps {
			script {
				try {
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw802 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.Onboarding.Integration.dll\" --where \"cat == Supplemental\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\Supplemental.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\Supplemental.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} Supplemental"
				}
			}
		}
	}
		
	stage('Run FromRec Tests') {
		steps {
			script {
				try {
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw802 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.Onboarding.Integration.dll\" --where \"cat == FromRec\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\FromRec.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\FromRec.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} FromRec"
				}
			}
		}
	}
		
	stage('Run UseStateOrFederalW4 Tests') {
		steps {
			script {
				try {
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw802 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.Onboarding.Integration.dll\" --where \"cat == UseStateOrFederalW4\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\UseStateOrFederalW4.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\UseStateOrFederalW4.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} UseStateOrFederalW4"
				}
			}
		}
	}
		
	stage('Run WithStateTax Tests') {
		steps {
			script {
				try {
				    bat"\\\\denver2\\Groups\\OnDemand\\Public\\Onboarding\\PSTools\\PsExec.exe \\\\devodw802 -u DEVCORP\\svc.od.acct -p Ond3m@nd -h C:\\Cleanup.bat"
				    
					bat"\"C:\\NUnit\\nunit-console\\nunit3-console.exe\" \"C:\\Projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\Echo.Automation.OnDemand.Onboarding.Integration.dll\" --where \"cat == WithStateTax\" > \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\WithStateTax.txt\" "
				}					
				catch(error){
                    currentBuild.result = 'FAILURE'
					return
                }
				finally{
					bat"copy \"C:\\projects\\UltiPro.NET\\AutomatedTests\\Echo\\EchoBin\\EchoErrors.html\" \"C:\\${env.JOB_NAME}\\${env.BUILD_NUMBER}\\WithStateTax.html\" /y "
					bat"C:\\CIHelper.exe -reportapi ${env.NODE_NAME} \"${env.JOB_NAME}\" ${env.BUILD_NUMBER} WithStateTax"
				}
			}
		}
    }
	stage('Slack Notification') {
		steps {
			script {
				try {
				   def params = "C:\\CIHelper.exe -getpassed DEVODW802 \"${env.JOB_NAME}\" ${env.BUILD_NUMBER}"
				   def work = bat(returnStdout: true, script: "C:\\CIHelper.exe -getpassed DEVODW802 \"${env.JOB_NAME}\" ${env.BUILD_NUMBER}").trim()
				   work = work.substring(127).trim()
				   notifyBuild("${currentBuild.result}", "${work}")
                }
                catch(error){
                    currentBuild.result = 'FAILURE'
					def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
                    slackSend channel: "#onbintegration", color: '#FF0000', message: "FAILED To Report Results: ${env.JOB_NAME} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
					throw error
                }
			}
		}
    }
	
}
}
def notifyBuild(String buildStatus = 'SUCCESS', String work) {
	    if (buildStatus == "null") {
            color = 'GREEN'
            colorCode = '#00FF00'
			buildStatus = "SUCCESS"
        } else {
            color = 'RED'
            colorCode = '#FF0000'
        }
        def urlnba = "file://DEVODW802/c\$/${env.JOB_NAME}/${env.BUILD_NUMBER}"
	    slackSend channel: "#onbintegration", color: colorCode, message: "${buildStatus}: ${env.JOB_NAME} \n ${work} \n build number: ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open Jenkins>) (<${urlnba}|Files>)"
	}